{"version":3,"sources":["containers/Chat.js","App.js","index.js"],"names":["Chat","chatState","setChatState","useState","messages","inputMessage","setInputMessage","isLoading","setIsLoading","messagesEndRef","useRef","useEffect","setTimeout","_messagesEndRef$curre","current","scrollIntoView","behavior","block","handleSendMessage","async","trim","userMessage","role","content","prev","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","length","lastMessage","error","console","_jsxs","style","minHeight","backgroundColor","fontFamily","color","overflow","children","maxWidth","margin","height","display","flexDirection","padding","marginBottom","border","boxShadow","textAlign","fontSize","fontWeight","textShadow","opacity","_jsx","overflowY","overflowX","position","flex","alignItems","justifyContent","lineHeight","marginTop","animation","map","message","index","whiteSpace","dangerouslySetInnerHTML","__html","replace","gap","ref","type","value","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","placeholder","disabled","outline","onClick","cursor","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84d58d8e.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst Chat = () => {\n  const [chatState, setChatState] = useState({ messages: [] });\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    setTimeout(() => {\n      messagesEndRef.current?.scrollIntoView({ behavior: 'smooth', block: 'end' });\n    }, 100);\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [chatState.messages, isLoading]);\n\n  const formatMessage = (content) => {\n    return content\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n      .replace(/`(.*?)`/g, '<code style=\"background-color: #003300; color: #00ff00; padding: 2px 4px; border-radius: 3px;\">$1</code>');\n  };\n\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n\n    const userMessage = { role: 'user', content: inputMessage };\n    setChatState(prev => ({\n      messages: [...prev.messages, userMessage]\n    }));\n\n    setInputMessage('');\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:8000/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ messages: [...chatState.messages, userMessage] })\n      });\n\n      if (!response.ok) throw new Error('Network response was not ok');\n\n      const data = await response.json();\n      if (data.messages && data.messages.length > 0) {\n        const lastMessage = data.messages[data.messages.length - 1];\n        if (lastMessage.role === 'assistant') {\n          setChatState(prev => ({\n            messages: [...prev.messages, lastMessage]\n          }));\n        }\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setChatState(prev => ({\n        messages: [...prev.messages, { role: 'assistant', content: 'Error: Unable to connect to AI service.' }]\n      }));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div style={{\n      minHeight: '100vh',\n      backgroundColor: '#000000',\n      fontFamily: '\"Courier New\", \"Monaco\", \"Menlo\", monospace',\n      color: '#00ff00',\n      overflow: 'hidden'\n    }}>\n      <div style={{\n        maxWidth: '1200px',\n        margin: '0 auto',\n        height: '90vh',\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '15px'\n      }}>\n        \n        {/* Terminal Header */}\n        <div style={{\n          marginBottom: '20px',\n          padding: '15px 20px',\n          backgroundColor: '#001100',\n          border: '2px solid #00ff00',\n          boxShadow: '0 0 20px rgba(0, 255, 0, 0.3)',\n          textAlign: 'left'\n        }}>\n          <div style={{\n            fontSize: '0.95rem',\n            color: '#00ff00',\n            fontWeight: 'bold',\n            marginBottom: '6px',\n            textShadow: '0 0 3px #00ff00'\n          }}>\n            {'>'} GRAPHMIND_AI_TERMINAL v2.1.0 [BETA]\n          </div>\n          <div style={{\n            fontSize: '0.75rem',\n            color: '#00cc00',\n            opacity: 0.8\n          }}>\n            {'>'} SYSTEM STATUS: ONLINE | AI_ENGINE: ACTIVE | SECURITY: ENABLED\n          </div>\n        </div>\n        \n        {/* Terminal Screen */}\n        <div style={{\n          height: '700px',\n          backgroundColor: '#001100',\n          border: '2px solid #00ff00',\n          padding: '30px',\n          marginBottom: '15px',\n          boxShadow: '0 0 15px rgba(0, 255, 0, 0.15), inset 0 0 20px rgba(0, 255, 0, 0.05)',\n          overflowY: 'auto',\n          overflowX: 'hidden',\n          display: 'flex',\n          flexDirection: 'column',\n          position: 'relative'\n        }}>\n          <div style={{ flex: 1, overflowY: 'auto' }}>\n            {chatState.messages.length === 0 ? (\n              <div style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'flex-start',\n                justifyContent: 'center',\n                height: '100%',\n                textAlign: 'left'\n              }}>\n                <div style={{\n                  color: '#00ff00',\n                  fontSize: '0.85rem',\n                  lineHeight: '1.2',\n                  textAlign: 'left'\n                }}>\n                  <div style={{ marginBottom: '10px' }}>╔════════════════════════════════════════╗</div>\n                  <div style={{ marginBottom: '10px' }}>║     GRAPHMIND AI TERMINAL v2.1.0       ║</div>\n                  <div style={{ marginBottom: '10px' }}>║                                        ║</div>\n                  <div style={{ marginBottom: '10px' }}>║  {'>'} Initializing AI subsystems...       ║</div>\n                  <div style={{ marginBottom: '10px' }}>║  {'>'} LangGraph engine: LOADED            ║</div>\n                  <div style={{ marginBottom: '10px' }}>║  {'>'} Neural networks: ACTIVE             ║</div>\n                  <div style={{ marginBottom: '10px' }}>║  {'>'} Security protocols: ENABLED         ║</div>\n                  <div style={{ marginBottom: '10px' }}>║                                        ║</div>\n                  <div style={{ marginBottom: '10px' }}>║  Type your message to begin...         ║</div>\n                  <div style={{ marginBottom: '10px' }}>╚════════════════════════════════════════╝</div>\n                  <div style={{ \n                    marginTop: '12px', \n                    animation: 'blink 1s infinite',\n                    fontSize: '0.9rem'\n                  }}>█</div>\n                </div>\n              </div>\n            ) : (\n              chatState.messages.map((message, index) => (\n                <div key={index} style={{\n                  marginBottom: '15px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'flex-start'\n                }}>\n                  <div style={{\n                    fontSize: '0.75rem',\n                    fontWeight: 'bold',\n                    marginBottom: '3px',\n                    color: message.role === 'user' ? '#00ffff' : '#00ff00'\n                  }}>\n                    {message.role === 'user' ? '> USER@terminal:~$' : '> AI_SYSTEM@graphmind:~$'}\n                  </div>\n                  <div style={{\n                    fontSize: '0.85rem',\n                    lineHeight: '1.2',\n                    whiteSpace: 'pre-wrap',\n                    color: message.role === 'user' ? '#00ffff' : '#00ff00',\n                    textShadow: message.role === 'user' ? '0 0 2px #00ffff' : '0 0 2px #00ff00',\n                    fontFamily: '\"Courier New\", monospace'\n                  }}>\n                    {message.role === 'assistant' ? (\n                      <div dangerouslySetInnerHTML={{ __html: formatMessage(message.content) }} />\n                    ) : (\n                      message.content\n                    )}\n                  </div>\n                </div>\n              ))\n            )}\n            \n            {isLoading && (\n              <div style={{\n                marginBottom: '15px',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'flex-start'\n              }}>\n                <div style={{\n                  fontSize: '0.75rem',\n                  fontWeight: 'bold',\n                  marginBottom: '3px',\n                  color: '#00ff00'\n                }}>\n                  {'>'} AI_SYSTEM@graphmind:~$\n                </div>\n                <div style={{\n                  color: '#00ff00',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '10px'\n                }}>\n                  <div style={{\n                    color: '#00ff00',\n                    animation: 'blink 1s infinite'\n                  }}>█</div>\n                  <span>PROCESSING...</span>\n                </div>\n              </div>\n            )}\n            \n            <div ref={messagesEndRef} style={{ height: '1px' }} />\n          </div>\n        </div>\n        \n        {/* Terminal Input */}\n        <div style={{\n          backgroundColor: '#001100',\n          border: '2px solid #00ff00',\n          padding: '15px',\n          boxShadow: '0 0 8px rgba(0, 255, 0, 0.2)',\n          display: 'flex',\n          gap: '10px',\n          alignItems: 'center'\n        }}>\n          <span style={{ color: '#00ff00', fontWeight: 'bold' }}>{'>'}</span>\n          <input\n            type=\"text\"\n            value={inputMessage}\n            onChange={(e) => setInputMessage(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Type command...\"\n            disabled={isLoading}\n            style={{\n              flex: 1,\n              padding: '8px 12px',\n              border: 'none',\n              fontSize: '0.85rem',\n              backgroundColor: '#000000',\n              color: '#00ff00',\n              outline: 'none',\n              fontFamily: '\"Courier New\", monospace',\n              textShadow: '0 0 2px #00ff00'\n            }}\n          />\n          <button \n            onClick={handleSendMessage}\n            disabled={isLoading || !inputMessage.trim()}\n            style={{\n              padding: '8px 16px',\n              border: '1px solid #00ff00',\n              backgroundColor: isLoading || !inputMessage.trim() ? '#002200' : '#003300',\n              color: isLoading || !inputMessage.trim() ? '#006600' : '#00ff00',\n              fontSize: '0.85rem',\n              fontWeight: 'bold',\n              cursor: isLoading || !inputMessage.trim() ? 'not-allowed' : 'pointer',\n              fontFamily: '\"Courier New\", monospace',\n              textShadow: '0 0 2px #00ff00'\n            }}\n          >\n            {isLoading ? 'TRANSMITTING...' : 'EXECUTE'}\n          </button>\n        </div>\n      </div>\n      \n      <style>{`\n        @keyframes blink {\n          0%, 50% { opacity: 1; }\n          51%, 100% { opacity: 0; }\n        }\n        \n        ::-webkit-scrollbar {\n          width: 10px;\n        }\n        \n        ::-webkit-scrollbar-track {\n          background: #000000;\n        }\n        \n        ::-webkit-scrollbar-thumb {\n          background: #00ff00;\n          border: 1px solid #003300;\n        }\n        \n        ::-webkit-scrollbar-thumb:hover {\n          background: #00cc00;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Chat;\n","import React from 'react';\nimport Chat from './containers/Chat';\n\nfunction App() {\n  return (\n    <div>\n      <Chat />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}